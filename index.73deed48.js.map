{"mappings":"AAmC8C,MAAxCA,EAAYC,SAASC,eAAe,UAeL,MAA/BC,EAAmBC,IAE2B,MAA5CC,EAAWD,EAAKE,MAAK,OAGrBC,EAAa,GAECF,EAAXG,SAAQC,IACf,MAAMC,EAAY,GAClB,IAAK,MAAMC,KAAUF,EACnBC,EAAUC,IAAWD,EAAUC,IAAW,GAAK,EAGZ,MAA/BC,EAAOC,OAAOD,KAAKF,GACzB,IAAK,MAAMI,KAAOF,EAChB,GAAuB,IAAnBF,EAAUI,GAAY,CACxBP,EAAWQ,KAAKD,GAChB,K,KAK2C,MAA3CE,EAAeT,EAAWU,QAAO,CAACC,EAAMC,KAC5CD,EAAKC,IAASD,EAAKC,IAAS,GAAK,EAC1BD,IACN,IAE0B,OAAtBX,EAAWa,MAAKD,GAA+B,IAAvBH,EAAaG,IAAY,EAI1DlB,SAASC,eAAe,UAAUmB,iBAAiB,UA3CjB,SAAZC,GACpBA,EAAMC,iBAG0B,MAA1BnB,EAAOH,SAASC,eAAe,aAAasB,MAGbC,QAA7BC,IAAIvB,EAAiBC,IAC7BJ,EAAU2B,YAAcxB,EAAiBC,E","sources":["src/index.js"],"sourcesContent":["// ===============Задача===========================\n// Вам потрібно розробити алгоритм програми, яка повинна виконувати наступне:\n// - програма приймає на вхід довільний текст і знаходить в кожному слові цього тексту найперший символ, який більше НЕ повторюється в аналізуємому слові\n// - далі із отриманого набору символів програма повинна вибрати перший унікальний (тобто той, який більше не зустручається в наборі) і повернути його.\n\n// Наприклад, якщо програма отримує на вхід текст нижче:\n\n// The Tao gave birth to machine language.  Machine language gave birth\n// to the assembler.\n// The assembler gave birth to the compiler.  Now there are ten thousand\n// languages.\n// Each language has its purpose, however humble.  Each language\n// expresses the Yin and Yang of software.  Each language has its place within\n// the Tao.\n// But do not program in COBOL if you can avoid it.\n//         -- Geoffrey James, \"The Tao of Programming\"\n\n// то повинна повернути вона символ \"m\".\n//=====================================================\n\n// 1. Приймаємо вхідний текст як рядок.\n// 2. Розділимо текст на окремі слова та отримаємо масив цих слів.\n// 3.  Ініцюємо словник для зберігання унікальних символів тексту.\n// 4. Перебираємо масив слів і для кожного слова виконаємо наступні кроки:\n//    4.1 Ініціалізуємо порожній обʼєкт для зберігання символів і кількості їх зустрічей.\n//    4.2 Для кожного символу у слові:\n//        4.2.1 Якщо символ вже присутній у словнику, збільшуємо значення його лічильника на 1.\n//        4.2.2 Якщо символ ще не присутній у словнику, додаємо його як ключ із початковим значенням 1.\n//    3.3 Додаємо унікальні символи слів до словнику.\n// 4. Рахуємо унікальні символи у словнику за допомогою методу reduce();\n// 5. Далі із отриманого набору символів, за допомогою методу find, вибраємо перший унікальний (тобто той, який більше не\n// зустручається в наборі) і повертаємо його.\n// 6. Записуємо унікальний символ у текстове поле результату.\n\n//отримуємо посилання на текстовий елемент результату\nconst resultRef = document.getElementById('result');\n\n// Функція обробки події надсилання форми\nfunction handleSubmit(event) {\n  event.preventDefault(); // Зупиняємо стандартну поведінку форми\n\n  // Отримуємо значення введеного тексту\n  const text = document.getElementById('textInput').value;\n\n  // Виклик функції обробки з отриманим текстом\n  console.log(findUnicueSymbol(text));\n  resultRef.textContent = findUnicueSymbol(text);\n}\n\n// функція пошуку унікального символу тексту\nconst findUnicueSymbol = text => {\n  // Розділимо текст на окремі слова та отримаємо масив цих слів.\n  const wordsArr = text.split(/\\s+/);\n\n  // Ініцюємо словник для зберігання унікальних символів тексту\n  const dictionary = [];\n  // Перебираємо масив слів\n  wordsArr.forEach(word => {\n    const letterObj = {};\n    for (const letter of word) {\n      letterObj[letter] = (letterObj[letter] || 0) + 1;\n    }\n    // Додаємо унікальні символи слів до словнику.\n    const keys = Object.keys(letterObj);\n    for (const key of keys) {\n      if (letterObj[key] === 1) {\n        dictionary.push(key);\n        break;\n      }\n    }\n  });\n  // Рахуємо унікальні символи у словнику за допомогою методу reduce\n  const uniqueSymbol = dictionary.reduce((acum, item) => {\n    acum[item] = (acum[item] || 0) + 1;\n    return acum;\n  }, {});\n  // Шукаємо перший унікальний символ\n  return dictionary.find(item => uniqueSymbol[item] === 1);\n};\n\n// Прикріплюємо обробник події надсилання форми\ndocument.getElementById('myForm').addEventListener('submit', handleSubmit);\n"],"names":["$1f0dc3b9307be026$var$resultRef","document","getElementById","$1f0dc3b9307be026$var$findUnicueSymbol","text","wordsArr","split","dictionary","forEach","word","letterObj","letter","keys","Object","key","push","uniqueSymbol","reduce","acum","item","find","addEventListener","event","preventDefault","value","console","log","textContent"],"version":3,"file":"index.73deed48.js.map"}